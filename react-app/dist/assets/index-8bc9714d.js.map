{"version":3,"file":"index-8bc9714d.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/StockChart.jsx","../../src/components/StockControls.jsx","../../src/components/StockAnalysis.jsx","../../src/components/LoadingSpinner.jsx","../../src/components/ErrorMessage.jsx","../../src/services/stockDataService.js","../../src/components/APISettings.jsx","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { useMemo } from 'react'\nimport Plot from 'react-plotly.js'\n\nconst StockChart = ({ data, ticker, period }) => {\n  const chartData = useMemo(() => {\n    if (!data?.data || data.data.length === 0) return null\n\n    const stockData = data.data\n    const { minSlope120, minSlope200 } = data.analysis\n\n    // 선택된 기간에 맞게 데이터 필터링 (차트 표시용)\n    let displayData = stockData\n    if (period !== 'max' && stockData.displayStartDate) {\n      displayData = stockData.filter(item => {\n        const itemDate = new Date(item.date)\n        return itemDate >= stockData.displayStartDate\n      })\n      console.log(`🎯 Display data filtered: ${displayData.length} days for chart (${period} years)`)\n    }\n\n    // 차트 데이터 구조\n    const dates = displayData.map(item => item.date)\n    const prices = displayData.map(item => item.close)\n    const ma120 = displayData.map(item => item.ma120 || null)\n    const ma200 = displayData.map(item => item.ma200 || null)\n\n    console.log(`📊 Chart data: ${dates.length} points`)\n    console.log(`📈 Price range: $${Math.min(...prices.filter(p => p)).toFixed(2)} - $${Math.max(...prices).toFixed(2)}`)\n    console.log(`🔴 120일 이평 유효 포인트: ${ma120.filter(v => v !== null).length}개`)\n    console.log(`🔵 200일 이평 유효 포인트: ${ma200.filter(v => v !== null).length}개`)\n\n    const traces = [\n      // 주식 가격 (원본과 동일)\n      {\n        x: dates,\n        y: prices,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Close Price',\n        line: { color: 'darkgray', width: 1 },\n        hovertemplate: '<b>%{x}</b><br>Close: $%{y:.2f}<extra></extra>'\n      },\n      \n      // 120일 이동평균 (원본과 동일 - 빨간색)\n      {\n        x: dates,\n        y: ma120,\n        type: 'scatter',\n        mode: 'lines',\n        name: '120-day MA',\n        line: { color: 'red', width: 2 },\n        hovertemplate: '<b>%{x}</b><br>120-day MA: $%{y:.2f}<extra></extra>'\n      },\n      \n      // 200일 이동평균 (원본과 동일 - 파란색)\n      {\n        x: dates,\n        y: ma200,\n        type: 'scatter',\n        mode: 'lines',\n        name: '200-day MA',\n        line: { color: 'blue', width: 2 },\n        hovertemplate: '<b>%{x}</b><br>200-day MA: $%{y:.2f}<extra></extra>'\n      }\n    ]\n\n    // 원본 Streamlit과 완전히 동일한 최저 기울기 지점 표시\n    // 신호 지점이 차트 표시 범위에 포함되는지 확인\n    if (minSlope120 && minSlope120.ma120 !== null) {\n      const signalDate = new Date(minSlope120.date)\n      const chartStartDate = new Date(dates[0])\n      const chartEndDate = new Date(dates[dates.length - 1])\n      const isInRange = signalDate >= chartStartDate && signalDate <= chartEndDate\n      \n      console.log(`🔴 120일 신호 지점: ${minSlope120.date}`)\n      console.log(`📊 차트 범위: ${dates[0]} ~ ${dates[dates.length - 1]}`)\n      console.log(`✅ 신호 지점 차트 내 포함: ${isInRange ? 'YES' : 'NO'}`)\n      \n      if (isInRange) {\n        console.log(`🔴 Adding 120일 마커: ${minSlope120.date} at $${minSlope120.ma120.toFixed(2)} (기울기: ${minSlope120.ma120Slope?.toFixed(6)})`)\n        \n        traces.push({\n          x: [minSlope120.date],\n          y: [minSlope120.ma120],\n          type: 'scatter',\n          mode: 'markers+text',\n          name: 'Lowest Slope Point 120 MA',\n          marker: { \n            color: 'red',          // 원본과 동일: color='red'\n            size: 12,              // 원본과 동일: size=12\n            symbol: 'circle',      // 원본과 동일: symbol='circle'\n            line: { color: 'white', width: 2 }\n          },\n          text: ['Lowest Slope 120 MA'],        // 원본과 동일: text=[\"Lowest Slope 120 MA\"]\n          textposition: 'top center',           // 원본과 동일: textposition=\"top center\"\n          textfont: { size: 10, color: 'red', family: 'Arial' },\n          hovertemplate: `<b>🔴 120일 최저 기울기 지점</b><br><b>날짜:</b> %{x}<br><b>120일 이평:</b> $%{y:.2f}<br><b>기울기:</b> ${minSlope120.ma120Slope?.toFixed(6)}<extra></extra>`,\n          showlegend: true\n        })\n      } else {\n        console.log(`⚠️ 120일 신호 지점이 차트 범위 밖에 있음`)\n      }\n    }\n\n    if (minSlope200 && minSlope200.ma200 !== null) {\n      const signalDate = new Date(minSlope200.date)\n      const chartStartDate = new Date(dates[0])\n      const chartEndDate = new Date(dates[dates.length - 1])\n      const isInRange = signalDate >= chartStartDate && signalDate <= chartEndDate\n      \n      console.log(`🔵 200일 신호 지점: ${minSlope200.date}`)\n      console.log(`📊 차트 범위: ${dates[0]} ~ ${dates[dates.length - 1]}`)\n      console.log(`✅ 신호 지점 차트 내 포함: ${isInRange ? 'YES' : 'NO'}`)\n      \n      if (isInRange) {\n        console.log(`🔵 Adding 200일 마커: ${minSlope200.date} at $${minSlope200.ma200.toFixed(2)} (기울기: ${minSlope200.ma200Slope?.toFixed(6)})`)\n        \n        traces.push({\n          x: [minSlope200.date],\n          y: [minSlope200.ma200],\n          type: 'scatter',\n          mode: 'markers+text',\n          name: 'Lowest Slope Point 200 MA',\n          marker: { \n            color: 'blue',         // 원본과 동일: color='blue'\n            size: 12,              // 원본과 동일: size=12\n            symbol: 'star',        // 원본과 동일: symbol='star'\n            line: { color: 'white', width: 2 }\n          },\n          text: ['Lowest Slope 200 MA'],        // 원본과 동일: text=[\"Lowest Slope 200 MA\"]\n          textposition: 'top center',           // 원본과 동일: textposition=\"top center\"\n          textfont: { size: 10, color: 'blue', family: 'Arial' },\n          hovertemplate: `<b>🔵 200일 최저 기울기 지점</b><br><b>날짜:</b> %{x}<br><b>200일 이평:</b> $%{y:.2f}<br><b>기울기:</b> ${minSlope200.ma200Slope?.toFixed(6)}<extra></extra>`,\n          showlegend: true\n        })\n      } else {\n        console.log(`⚠️ 200일 신호 지점이 차트 범위 밖에 있음`)\n      }\n    }\n\n    // 디버깅 정보\n    console.log(`📊 Chart traces generated: ${traces.length} traces`)\n    console.log(`📈 Data points: ${dates.length}`)\n    console.log(`🔴 120일 신호 표시: ${minSlope120 ? 'YES' : 'NO'}`)\n    console.log(`🔵 200일 신호 표시: ${minSlope200 ? 'YES' : 'NO'}`)\n\n    return traces\n  }, [data])\n\n  // 원본 Streamlit 앱과 동일한 차트 레이아웃\n  const layout = {\n    title: {\n      text: `${ticker} Stock Price and Moving Averages (${period === 'max' ? 'Max' : period + ' years'})`,\n      font: { size: 18, family: 'Arial, sans-serif' }\n    },\n    xaxis: { \n      title: 'Date',\n      type: 'date',\n      showgrid: true,\n      gridcolor: '#f0f0f0'\n    },\n    yaxis: { \n      title: 'Price ($)',\n      showgrid: true,\n      gridcolor: '#f0f0f0'\n    },\n    hovermode: 'x unified',\n    showlegend: true,\n    legend: {\n      x: 0,\n      y: 1,\n      bgcolor: 'rgba(255,255,255,0.9)',\n      bordercolor: '#ddd',\n      borderwidth: 1\n    },\n    plot_bgcolor: '#fafafa',\n    paper_bgcolor: 'white',\n    margin: { t: 80, r: 30, b: 60, l: 80 },\n    height: 600 // 원본과 동일한 높이\n  }\n\n  const config = {\n    responsive: true,\n    displayModeBar: true,\n    modeBarButtonsToRemove: [\n      'lasso2d', \n      'select2d',\n      'autoScale2d',\n      'hoverClosestCartesian',\n      'hoverCompareCartesian',\n      'toggleSpikelines'\n    ],\n    displaylogo: false,\n    toImageButtonOptions: {\n      format: 'png',\n      filename: `${ticker}_moving_averages_${period}y`,\n      height: 600,\n      width: 1000,\n      scale: 1\n    }\n  }\n\n  if (!chartData) {\n    return (\n      <div className=\"chart-container\">\n        <div className=\"chart-placeholder\">\n          <p>차트 데이터를 불러오는 중...</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"chart-container\">\n      <div className=\"chart-header\">\n        <h2>📊 {ticker} 주식 차트</h2>\n        <div className=\"chart-info\">\n          <span>📈 총 {data.data.length}일 데이터</span>\n          <span>🔴 120일 이평 {data.analysis.ma120Days}개</span>\n          <span>🔵 200일 이평 {data.analysis.ma200Days}개</span>\n        </div>\n      </div>\n      \n      <Plot\n        data={chartData}\n        layout={layout}\n        config={config}\n        style={{ width: '100%', height: '600px' }}\n        useResizeHandler={true}\n      />\n    </div>\n  )\n}\n\nexport default StockChart","import { useState } from 'react'\n\nconst StockControls = ({ onLoadData, loading, defaultTicker = 'QQQ' }) => {\n  const [ticker, setTicker] = useState(defaultTicker)\n  const [period, setPeriod] = useState('3')\n\n  // 원본 yfiance-ma.py와 동일한 기간 옵션\n  const periodOptions = [\n    { value: '3', label: '3 years' },\n    { value: '6', label: '6 years' },\n    { value: '9', label: '9 years' },\n    { value: '12', label: '12 years' },\n    { value: 'max', label: 'Max' }\n  ]\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (ticker.trim() && !loading) {\n      onLoadData(ticker.trim().toUpperCase(), period)\n    }\n  }\n\n  const handleTickerChange = (e) => {\n    // 자동으로 대문자 변환\n    setTicker(e.target.value.toUpperCase())\n  }\n\n  const handleQuickSelect = (selectedTicker) => {\n    setTicker(selectedTicker)\n    if (!loading) {\n      onLoadData(selectedTicker, period)\n    }\n  }\n\n  // 원본과 동일한 추천 티커\n  const suggestedTickers = [\n    'MSFT', 'AAPL', 'NVDA', 'GOOGL', 'TSLA', \n    'AMZN', 'TSM', 'LLY', 'NOV', 'AVGO', \n    'ORCL', 'NFLX', 'META', 'QQQ', 'SPY'\n  ]\n\n  return (\n    <div className=\"controls-container\">\n      <form onSubmit={handleSubmit} className=\"stock-controls\">\n        <div className=\"control-group\">\n          <label htmlFor=\"ticker\" className=\"control-label\">\n            주식 티커:\n          </label>\n          <div className=\"ticker-input-container\">\n            <input\n              id=\"ticker\"\n              type=\"text\"\n              value={ticker}\n              onChange={handleTickerChange}\n              placeholder=\"AAPL, MSFT, QQQ...\"\n              className=\"ticker-input\"\n              disabled={loading}\n              maxLength={10}\n            />\n            <div className=\"input-hint\">\n              예시: {suggestedTickers.slice(0, 4).join(', ')}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"control-group\">\n          <label htmlFor=\"period\" className=\"control-label\">\n            기간:\n          </label>\n          <select\n            id=\"period\"\n            value={period}\n            onChange={(e) => setPeriod(e.target.value)}\n            className=\"period-select\"\n            disabled={loading}\n          >\n            {periodOptions.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <button\n          type=\"submit\"\n          className={`load-button ${loading ? 'loading' : ''}`}\n          disabled={loading || !ticker.trim()}\n        >\n          {loading ? (\n            <>\n              <span className=\"spinner\"></span>\n              Loading...\n            </>\n          ) : (\n            '📊 Load Data'\n          )}\n        </button>\n      </form>\n\n      {/* 빠른 선택 버튼들 */}\n      <div className=\"quick-select\">\n        <h3>빠른 선택:</h3>\n        <div className=\"quick-buttons\">\n          {suggestedTickers.map(suggestedTicker => (\n            <button\n              key={suggestedTicker}\n              onClick={() => handleQuickSelect(suggestedTicker)}\n              className={`quick-button ${ticker === suggestedTicker ? 'active' : ''}`}\n              disabled={loading}\n              title={`${suggestedTicker} 데이터 로드`}\n            >\n              {suggestedTicker}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StockControls","import { useMemo } from 'react'\n\nconst StockAnalysis = ({ data, ticker }) => {\n  const analysisResults = useMemo(() => {\n    if (!data?.data || !data.analysis) return null\n\n    const { minSlope120, minSlope200 } = data.analysis\n    const stockData = data.data\n    const latestData = stockData[stockData.length - 1]\n\n    return {\n      minSlope120,\n      minSlope200,\n      latestData,\n      totalDays: stockData.length,\n      ma120Days: data.analysis.ma120Days,\n      ma200Days: data.analysis.ma200Days\n    }\n  }, [data])\n\n  if (!analysisResults) {\n    return <div className=\"analysis-placeholder\">분석 데이터가 없습니다.</div>\n  }\n\n  const { minSlope120, minSlope200, latestData } = analysisResults\n\n  // 현재 트렌드 계산\n  const getCurrentTrend = (slope) => {\n    if (!slope) return { text: 'N/A', emoji: '❓', className: 'neutral' }\n    \n    if (slope > 0.5) return { text: '강한 상승', emoji: '🚀', className: 'strong-up' }\n    if (slope > 0) return { text: '상승', emoji: '📈', className: 'up' }\n    if (slope < -0.5) return { text: '강한 하락', emoji: '📉', className: 'strong-down' }\n    if (slope < 0) return { text: '하락', emoji: '📉', className: 'down' }\n    return { text: '보합', emoji: '➡️', className: 'neutral' }\n  }\n\n  const trend120 = getCurrentTrend(latestData.ma120Slope)\n  const trend200 = getCurrentTrend(latestData.ma200Slope)\n\n  return (\n    <div className=\"analysis-container\">\n      <div className=\"analysis-header\">\n        <h2>📊 {ticker} 이동평균선 분석</h2>\n        <div className=\"analysis-summary\">\n          <span>총 {analysisResults.totalDays}일 데이터</span>\n          <span>|</span>\n          <span>120일 이평: {analysisResults.ma120Days}개</span>\n          <span>|</span>\n          <span>200일 이평: {analysisResults.ma200Days}개</span>\n        </div>\n      </div>\n\n      <div className=\"analysis-grid\">\n        {/* 120일 이동평균 최저 기울기 지점 */}\n        {minSlope120 && (\n          <div className=\"analysis-card slope-analysis\">\n            <div className=\"card-header\">\n              <h3>🔴 120일 이동평균 최저 기울기 지점</h3>\n              <span className=\"signal-marker\">● 원형 마커</span>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"metric-row\">\n                <span className=\"metric-label\">📅 날짜:</span>\n                <span className=\"metric-value\">{minSlope120.date}</span>\n              </div>\n              <div className=\"metric-row\">\n                <span className=\"metric-label\">💰 120일 이평가:</span>\n                <span className=\"metric-value\">${minSlope120.ma120?.toFixed(2)}</span>\n              </div>\n              <div className=\"metric-row\">\n                <span className=\"metric-label\">📉 기울기:</span>\n                <span className=\"metric-value negative\">{minSlope120.ma120Slope?.toFixed(6)}</span>\n              </div>\n              <div className=\"metric-row\">\n                <span className=\"metric-label\">📊 차트 표시:</span>\n                <span className=\"signal-indicator\">\n                  <span className=\"signal-dot red\"></span>\n                  빨간 원형 마커로 표시됨\n                </span>\n              </div>\n              <p className=\"analysis-note\">\n                <strong>📍 차트에서 빨간색 원형(●) 마커를 확인하세요!</strong><br/>\n                이 지점은 120일 이동평균선의 기울기가 가장 급격하게 하락한 시점으로, \n                시장 조정이나 하락 트렌드의 가속화를 나타냅니다.\n              </p>\n            </div>\n          </div>\n        )}\n\n        {/* 200일 이동평균 최저 기울기 지점 */}\n        {minSlope200 && (\n          <div className=\"analysis-card slope-analysis\">\n            <div className=\"card-header\">\n              <h3>🔵 200일 이동평균 최저 기울기 지점</h3>\n              <span className=\"signal-marker\">★ 별 마커</span>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"metric-row\">\n                <span className=\"metric-label\">📅 날짜:</span>\n                <span className=\"metric-value\">{minSlope200.date}</span>\n              </div>\n              <div className=\"metric-row\">\n                <span className=\"metric-label\">💰 200일 이평가:</span>\n                <span className=\"metric-value\">${minSlope200.ma200?.toFixed(2)}</span>\n              </div>\n              <div className=\"metric-row\">\n                <span className=\"metric-label\">📉 기울기:</span>\n                <span className=\"metric-value negative\">{minSlope200.ma200Slope?.toFixed(6)}</span>\n              </div>\n              <div className=\"metric-row\">\n                <span className=\"metric-label\">📊 차트 표시:</span>\n                <span className=\"signal-indicator\">\n                  <span className=\"signal-dot blue\">★</span>\n                  파란 별형 마커로 표시됨\n                </span>\n              </div>\n              <p className=\"analysis-note\">\n                <strong>📍 차트에서 파란색 별형(★) 마커를 확인하세요!</strong><br/>\n                이 지점은 200일 이동평균선의 기울기가 가장 급격하게 하락한 시점으로, \n                장기 트렌드 전환점을 나타낼 가능성이 높습니다.\n              </p>\n            </div>\n          </div>\n        )}\n\n        {/* 현재 트렌드 분석 */}\n        {latestData.ma120 && latestData.ma200 && (\n          <div className=\"analysis-card current-trend\">\n            <div className=\"card-header\">\n              <h3>📈 현재 트렌드 분석</h3>\n              <span className=\"latest-date\">{latestData.date}</span>\n            </div>\n            <div className=\"card-content\">\n              <div className=\"trend-row\">\n                <span className=\"trend-label\">120일 이평 트렌드:</span>\n                <span className={`trend-value ${trend120.className}`}>\n                  {trend120.emoji} {trend120.text}\n                  <small>({latestData.ma120Slope > 0 ? '+' : ''}{latestData.ma120Slope?.toFixed(4)})</small>\n                </span>\n              </div>\n              \n              <div className=\"trend-row\">\n                <span className=\"trend-label\">200일 이평 트렌드:</span>\n                <span className={`trend-value ${trend200.className}`}>\n                  {trend200.emoji} {trend200.text}\n                  <small>({latestData.ma200Slope > 0 ? '+' : ''}{latestData.ma200Slope?.toFixed(4)})</small>\n                </span>\n              </div>\n\n              <div className=\"separator\"></div>\n\n              <div className=\"price-position\">\n                <h4>💰 현재 주가 포지션</h4>\n                <div className=\"position-row\">\n                  <span>현재가:</span>\n                  <span className=\"current-price\">${latestData.close.toFixed(2)}</span>\n                </div>\n                <div className=\"position-row\">\n                  <span>120일 이평 대비:</span>\n                  <span className={latestData.close > latestData.ma120 ? 'above' : 'below'}>\n                    {latestData.close > latestData.ma120 ? '✅ 상회' : '❌ 하회'}\n                    <small>({((latestData.close / latestData.ma120 - 1) * 100).toFixed(1)}%)</small>\n                  </span>\n                </div>\n                <div className=\"position-row\">\n                  <span>200일 이평 대비:</span>\n                  <span className={latestData.close > latestData.ma200 ? 'above' : 'below'}>\n                    {latestData.close > latestData.ma200 ? '✅ 상회' : '❌ 하회'}\n                    <small>({((latestData.close / latestData.ma200 - 1) * 100).toFixed(1)}%)</small>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* 기술적 신호 */}\n        <div className=\"analysis-card technical-signals\">\n          <div className=\"card-header\">\n            <h3>🎯 기술적 신호</h3>\n          </div>\n          <div className=\"card-content\">\n            {latestData.ma120 && latestData.ma200 && (\n              <div className=\"signal-item\">\n                <span className=\"signal-label\">골든 크로스/데드 크로스:</span>\n                <span className={`signal-value ${latestData.ma120 > latestData.ma200 ? 'bullish' : 'bearish'}`}>\n                  {latestData.ma120 > latestData.ma200 ? \n                    '🌟 골든 크로스 (강세)' : \n                    '💀 데드 크로스 (약세)'\n                  }\n                </span>\n              </div>\n            )}\n            \n            <div className=\"signal-item\">\n              <span className=\"signal-label\">120일 이평 모멘텀:</span>\n              <span className={`signal-value ${trend120.className}`}>\n                {trend120.emoji} {trend120.text}\n              </span>\n            </div>\n            \n            <div className=\"signal-item\">\n              <span className=\"signal-label\">200일 이평 모멘텀:</span>\n              <span className={`signal-value ${trend200.className}`}>\n                {trend200.emoji} {trend200.text}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StockAnalysis","const LoadingSpinner = () => {\n  return (\n    <div className=\"loading-spinner\">\n      <div className=\"spinner\"></div>\n      <p>주식 데이터를 불러오는 중...</p>\n      <small>잠시만 기다려주세요</small>\n    </div>\n  )\n}\n\nexport default LoadingSpinner","const ErrorMessage = ({ message }) => {\n  return (\n    <div className=\"error-message\">\n      <strong>⚠️ 오류 발생:</strong> {message}\n    </div>\n  )\n}\n\nexport default ErrorMessage","import axios from 'axios'\n\n// 무료 API 설정\nconst FREE_APIS = {\n  // Alpha Vantage (추천) - 무료 500 calls/day\n  ALPHA_VANTAGE: {\n    baseURL: 'https://www.alphavantage.co/query',\n    key: 'demo', // 실제 사용시 https://www.alphavantage.co/support/#api-key 에서 무료 키 발급\n    function: 'TIME_SERIES_DAILY'\n  },\n  \n  // Finnhub - 무료 60 calls/minute  \n  FINNHUB: {\n    baseURL: 'https://finnhub.io/api/v1',\n    key: 'demo', // 실제 사용시 https://finnhub.io 에서 무료 키 발급\n  },\n\n  // Polygon.io - 무료 5 calls/minute\n  POLYGON: {\n    baseURL: 'https://api.polygon.io/v2',\n    key: 'demo' // 실제 사용시 polygon.io에서 무료 키 발급\n  }\n}\n\nclass StockDataService {\n  constructor() {\n    this.currentAPI = 'YAHOO_DIRECT' // 원본과 동일한 데이터 소스 사용\n    this.cache = new Map() // 간단한 캐싱\n    this.rateLimitDelay = 1000 // 1초 딜레이\n  }\n\n  // API 키 설정 (사용자가 직접 입력)\n  setAPIKey(api, key) {\n    FREE_APIS[api].key = key\n  }\n\n  // 원본 yfiance-ma.py와 동일한 데이터 구조로 변환\n  async fetchStockData(ticker, period = '3') {\n    const cacheKey = `${ticker}_${period}`\n    \n    if (this.cache.has(cacheKey)) {\n      console.log('📦 Using cached data for', cacheKey)\n      return this.cache.get(cacheKey)\n    }\n\n    try {\n      let rawData\n      \n      switch (this.currentAPI) {\n        case 'YAHOO_DIRECT':\n          rawData = await this.fetchFromYahooDirect(ticker, period)\n          break\n        case 'ALPHA_VANTAGE':\n          rawData = await this.fetchFromAlphaVantage(ticker, period)\n          break\n        case 'FINNHUB':\n          rawData = await this.fetchFromFinnhub(ticker, period)\n          break\n        default:\n          throw new Error(`Unsupported API: ${this.currentAPI}`)\n      }\n\n      // 원본 Python 로직과 동일하게 처리\n      const processedData = this.processStockData(rawData, ticker, period)\n      \n      // 캐싱 (10분)\n      this.cache.set(cacheKey, processedData)\n      setTimeout(() => this.cache.delete(cacheKey), 10 * 60 * 1000)\n      \n      return processedData\n\n    } catch (error) {\n      console.error('Error fetching stock data:', error)\n      throw this.handleAPIError(error)\n    }\n  }\n\n  async fetchFromYahooDirect(ticker, period) {\n    // CORS 우회를 위한 공개 프록시 사용 (원본 yfinance와 동일한 데이터)\n    const now = new Date()\n    const startDate = new Date()\n    \n    if (period === 'max') {\n      // 최대한 오래된 데이터 (20년 전)\n      startDate.setFullYear(startDate.getFullYear() - 20)\n    } else {\n      const years = parseInt(period)\n      // 이동평균 계산을 위해 추가 기간 확보\n      startDate.setFullYear(startDate.getFullYear() - years - 1)\n    }\n    \n    const startTimestamp = Math.floor(startDate.getTime() / 1000)\n    const endTimestamp = Math.floor(now.getTime() / 1000)\n    \n    // Yahoo Finance CSV URL 구성\n    const yahooURL = `https://query1.finance.yahoo.com/v7/finance/download/${ticker}?period1=${startTimestamp}&period2=${endTimestamp}&interval=1d&events=history&includeAdjustedClose=true`\n    \n    // CORS 프록시 사용\n    const proxyURL = `https://api.allorigins.win/raw?url=${encodeURIComponent(yahooURL)}`\n    \n    console.log(`🚀 Fetching from Yahoo Finance via CORS proxy for ${ticker} (period: ${period})`)\n    console.log(`📅 Date range: ${startDate.toISOString().split('T')[0]} to ${now.toISOString().split('T')[0]}`)\n    console.log(`🔗 Using proxy: ${proxyURL}`)\n    \n    try {\n      const response = await axios.get(proxyURL, { \n        timeout: 30000,\n        responseType: 'text',  // CSV 응답\n        headers: {\n          'Accept': 'text/csv'\n        }\n      })\n      \n      if (!response.data || response.data.includes('error') || !response.data.includes('Date')) {\n        throw new Error('Invalid CSV response from Yahoo Finance')\n      }\n      \n      console.log(`📊 Got ${response.data.split('\\n').length - 1} lines from Yahoo Finance`)\n      \n      return this.parseYahooCSV(response.data, period)\n      \n    } catch (error) {\n      console.error('Yahoo Finance Direct API failed:', error)\n      console.log('🔄 Fallback to Alpha Vantage...')\n      \n      // Yahoo Finance 실패시 Alpha Vantage로 폴백\n      this.currentAPI = 'ALPHA_VANTAGE'\n      return await this.fetchFromAlphaVantage(ticker, period)\n    }\n  }\n\n  parseYahooCSV(csvData, period) {\n    const lines = csvData.trim().split('\\n')\n    const headers = lines[0].split(',')\n    \n    console.log(`📊 CSV Headers: ${headers.join(', ')}`)\n    \n    const data = []\n    for (let i = 1; i < lines.length; i++) {\n      const values = lines[i].split(',')\n      \n      // 유효하지 않은 데이터 스킵\n      if (values.length < 6 || values[4] === 'null') continue\n      \n      data.push({\n        date: values[0],\n        open: parseFloat(values[1]),\n        high: parseFloat(values[2]),\n        low: parseFloat(values[3]),\n        close: parseFloat(values[4]),\n        volume: parseInt(values[6] || values[5])\n      })\n    }\n    \n    // 날짜순 정렬\n    data.sort((a, b) => new Date(a.date) - new Date(b.date))\n    \n    // 기간별 필터링 (표시용)\n    if (period !== 'max') {\n      const years = parseInt(period)\n      const endDate = new Date()\n      const startDate = new Date()\n      startDate.setFullYear(startDate.getFullYear() - years)\n      \n      // 표시 범위 정보 저장\n      data.displayStartDate = startDate\n      data.displayEndDate = endDate\n      \n      console.log(`🎯 Display period will be: ${startDate.toISOString().split('T')[0]} to ${endDate.toISOString().split('T')[0]}`)\n    }\n    \n    console.log(`📈 Parsed ${data.length} days from Yahoo Finance CSV`)\n    console.log(`📅 Full data range: ${data[0]?.date} to ${data[data.length - 1]?.date}`)\n    \n    return data\n  }\n\n  async fetchFromAlphaVantage(ticker, period) {\n    const { baseURL, key, function: func } = FREE_APIS.ALPHA_VANTAGE\n    \n    // 이동평균 계산을 위해 항상 full 데이터 요청\n    // compact는 최근 100일만 제공하므로 200일 이동평균 계산 불가\n    const params = {\n      function: func,\n      symbol: ticker,\n      outputsize: 'full', // 항상 full로 충분한 데이터 확보\n      apikey: key\n    }\n\n    console.log(`🚀 Fetching FULL data from Alpha Vantage for ${ticker} (period: ${period})`)\n    console.log('📊 Using outputsize=full to ensure sufficient data for 200-day MA')\n    \n    const response = await axios.get(baseURL, { params, timeout: 30000 })\n    \n    if (response.data['Error Message']) {\n      throw new Error(`Invalid symbol: ${ticker}`)\n    }\n    \n    if (response.data['Note']) {\n      throw new Error('API rate limit exceeded. Please try again later.')\n    }\n\n    const timeSeries = response.data['Time Series (Daily)']\n    if (!timeSeries) {\n      throw new Error('No data received from API')\n    }\n\n    const fullData = this.convertAlphaVantageData(timeSeries, period)\n    console.log(`📈 Fetched ${fullData.length} days of data`)\n    \n    return fullData\n  }\n\n  convertAlphaVantageData(timeSeries, period) {\n    // 전체 데이터를 날짜순으로 정렬\n    const allData = Object.entries(timeSeries)\n      .map(([date, values]) => ({\n        date,\n        close: parseFloat(values['4. close']),\n        open: parseFloat(values['1. open']),\n        high: parseFloat(values['2. high']),\n        low: parseFloat(values['3. low']),\n        volume: parseInt(values['5. volume'])\n      }))\n      .sort((a, b) => new Date(a.date) - new Date(b.date))\n\n    console.log(`📅 Full data range: ${allData[0]?.date} to ${allData[allData.length - 1]?.date}`)\n\n    // 기간별 필터링 (하지만 이동평균 계산을 위해 추가 데이터 확보)\n    if (period !== 'max') {\n      const years = parseInt(period)\n      const endDate = new Date()\n      const startDate = new Date()\n      startDate.setFullYear(startDate.getFullYear() - years)\n      \n      // 200일 이동평균 계산을 위해 시작일에서 200일 더 이전부터 데이터 가져오기\n      const bufferStartDate = new Date(startDate)\n      bufferStartDate.setDate(bufferStartDate.getDate() - 250) // 200일 + 버퍼\n      \n      console.log(`📊 Filtering data: ${bufferStartDate.toISOString().split('T')[0]} to ${endDate.toISOString().split('T')[0]}`)\n      console.log(`🎯 Target period: ${startDate.toISOString().split('T')[0]} to ${endDate.toISOString().split('T')[0]} (${years} years)`)\n      \n      const filteredData = allData.filter(item => {\n        const itemDate = new Date(item.date)\n        return itemDate >= bufferStartDate && itemDate <= endDate\n      })\n      \n      console.log(`📈 Filtered to ${filteredData.length} days (includes buffer for moving averages)`)\n      \n      // 실제 표시할 기간 정보를 저장\n      filteredData.displayStartDate = startDate\n      filteredData.displayEndDate = endDate\n      \n      return filteredData\n    }\n\n    console.log(`📈 Using all ${allData.length} days (Max period)`)\n    return allData\n  }\n\n  // 원본 yfiance-ma.py와 완전히 동일한 데이터 처리\n  processStockData(rawData, ticker, period) {\n    if (!rawData || rawData.length === 0) {\n      throw new Error('No data available')\n    }\n\n    console.log(`📊 Processing ${rawData.length} days of data for ${ticker}`)\n    console.log(`📅 Data date range: ${rawData[0]?.date} to ${rawData[rawData.length - 1]?.date}`)\n\n    // 데이터 충분성 검사\n    if (rawData.length < 200) {\n      console.warn(`⚠️ Warning: Only ${rawData.length} days of data available. 200-day MA may be incomplete.`)\n    }\n\n    // 1단계: 이동평균 계산 (원본과 동일)\n    const processedData = rawData.map((item, index) => {\n      const processed = { ...item }\n\n      // 120일 이동평균 (원본: yf_data['120_MA'] = yf_data['Close'].rolling(window=120).mean())\n      if (index >= 119) {\n        const sum120 = rawData.slice(index - 119, index + 1)\n          .reduce((sum, item) => sum + item.close, 0)\n        processed.ma120 = sum120 / 120\n      } else {\n        processed.ma120 = null // NaN과 동일\n      }\n\n      // 200일 이동평균 (원본: yf_data['200_MA'] = yf_data['Close'].rolling(window=200).mean())\n      if (index >= 199) {\n        const sum200 = rawData.slice(index - 199, index + 1)\n          .reduce((sum, item) => sum + item.close, 0)\n        processed.ma200 = sum200 / 200\n      } else {\n        processed.ma200 = null // NaN과 동일\n      }\n\n      return processed\n    })\n\n    // 2단계: 기울기 계산 (원본과 동일)\n    // 원본: yf_data['120_MA_Slope'] = yf_data['120_MA'].diff()\n    // 원본: yf_data['200_MA_Slope'] = yf_data['200_MA'].diff()\n    processedData.forEach((item, index) => {\n      if (index > 0) {\n        // 120일 이동평균 기울기\n        if (item.ma120 !== null && processedData[index - 1].ma120 !== null) {\n          item.ma120Slope = item.ma120 - processedData[index - 1].ma120\n        } else {\n          item.ma120Slope = null\n        }\n        \n        // 200일 이동평균 기울기\n        if (item.ma200 !== null && processedData[index - 1].ma200 !== null) {\n          item.ma200Slope = item.ma200 - processedData[index - 1].ma200\n        } else {\n          item.ma200Slope = null\n        }\n      } else {\n        item.ma120Slope = null\n        item.ma200Slope = null\n      }\n    })\n\n    // 3단계: 최저 기울기 지점 찾기 (원본과 동일)\n    // 원본: min_slope_120_idx = yf_data['120_MA_Slope'].idxmin()\n    // 원본: min_slope_200_idx = yf_data['200_MA_Slope'].idxmin()\n    const validMA120Slopes = processedData.filter(item => item.ma120Slope !== null && !isNaN(item.ma120Slope))\n    const validMA200Slopes = processedData.filter(item => item.ma200Slope !== null && !isNaN(item.ma200Slope))\n\n    let minSlope120 = null\n    let minSlope200 = null\n\n    if (validMA120Slopes.length > 0) {\n      minSlope120 = validMA120Slopes.reduce((min, item) => \n        item.ma120Slope < min.ma120Slope ? item : min\n      )\n      console.log(`🔴 120일 최저 기울기: ${minSlope120.date} = ${minSlope120.ma120Slope.toFixed(6)}`)\n    }\n\n    if (validMA200Slopes.length > 0) {\n      minSlope200 = validMA200Slopes.reduce((min, item) => \n        item.ma200Slope < min.ma200Slope ? item : min\n      )\n      console.log(`🔵 200일 최저 기울기: ${minSlope200.date} = ${minSlope200.ma200Slope.toFixed(6)}`)\n    }\n\n    return {\n      ticker: ticker.toUpperCase(),\n      period,\n      data: processedData,\n      analysis: {\n        minSlope120,\n        minSlope200,\n        totalDays: processedData.length,\n        ma120Days: validMA120Slopes.length,\n        ma200Days: validMA200Slopes.length\n      }\n    }\n  }\n\n  handleAPIError(error) {\n    if (error.code === 'ECONNABORTED' || error.message.includes('timeout')) {\n      return new Error('Request timeout. Please try again.')\n    }\n    \n    if (error.response?.status === 429) {\n      return new Error('API rate limit exceeded. Please wait a moment and try again.')\n    }\n    \n    if (error.response?.status === 401 || error.response?.status === 403) {\n      return new Error('API key invalid or expired. Please check your API configuration.')\n    }\n    \n    return error\n  }\n\n  // API 상태 확인\n  async checkAPIStatus() {\n    try {\n      await this.fetchStockData('AAPL', '1') // 테스트 호출\n      return { status: 'ok', api: this.currentAPI }\n    } catch (error) {\n      return { status: 'error', error: error.message, api: this.currentAPI }\n    }\n  }\n}\n\nexport default new StockDataService()","import { useState } from 'react'\nimport stockDataService from '../services/stockDataService'\n\nconst APISettings = ({ onClose }) => {\n  const [apiKey, setApiKey] = useState('')\n  const [selectedAPI, setSelectedAPI] = useState('ALPHA_VANTAGE')\n\n  const handleSave = () => {\n    if (apiKey.trim()) {\n      stockDataService.setAPIKey(selectedAPI, apiKey.trim())\n      alert('API 키가 저장되었습니다!')\n      onClose()\n    } else {\n      alert('API 키를 입력해주세요.')\n    }\n  }\n\n  return (\n    <div className=\"api-settings\">\n      <div className=\"settings-header\">\n        <h3>⚙️ API 설정</h3>\n        <button onClick={onClose} className=\"close-btn\">✕</button>\n      </div>\n      \n      <div className=\"settings-content\">\n        <div className=\"setting-group\">\n          <label>API 선택:</label>\n          <select \n            value={selectedAPI} \n            onChange={(e) => setSelectedAPI(e.target.value)}\n          >\n            <option value=\"ALPHA_VANTAGE\">Alpha Vantage (추천)</option>\n            <option value=\"FINNHUB\">Finnhub</option>\n          </select>\n        </div>\n        \n        <div className=\"setting-group\">\n          <label>API 키:</label>\n          <input \n            type=\"text\"\n            value={apiKey}\n            onChange={(e) => setApiKey(e.target.value)}\n            placeholder=\"API 키를 입력하세요\"\n          />\n        </div>\n        \n        <div className=\"api-info\">\n          {selectedAPI === 'ALPHA_VANTAGE' && (\n            <p>\n              무료 키: <a href=\"https://www.alphavantage.co/support/#api-key\" target=\"_blank\" rel=\"noopener noreferrer\">\n                alphavantage.co\n              </a> (500 calls/day)\n            </p>\n          )}\n          {selectedAPI === 'FINNHUB' && (\n            <p>\n              무료 키: <a href=\"https://finnhub.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n                finnhub.io\n              </a> (60 calls/minute)\n            </p>\n          )}\n        </div>\n        \n        <div className=\"settings-actions\">\n          <button onClick={handleSave} className=\"save-btn\">저장</button>\n          <button onClick={onClose} className=\"cancel-btn\">취소</button>\n        </div>\n      </div>\n      \n      <style jsx>{`\n        .api-settings {\n          background: white;\n          border-radius: 12px;\n          padding: 1.5rem;\n          margin-bottom: 1rem;\n          box-shadow: 0 4px 20px rgba(0,0,0,0.15);\n          border: 1px solid #e1e8ed;\n        }\n        \n        .settings-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 1rem;\n          padding-bottom: 0.5rem;\n          border-bottom: 1px solid #e9ecef;\n        }\n        \n        .close-btn {\n          background: none;\n          border: none;\n          font-size: 1.2rem;\n          cursor: pointer;\n          color: #666;\n        }\n        \n        .setting-group {\n          margin-bottom: 1rem;\n        }\n        \n        .setting-group label {\n          display: block;\n          margin-bottom: 0.5rem;\n          font-weight: 600;\n          color: #555;\n        }\n        \n        .setting-group input,\n        .setting-group select {\n          width: 100%;\n          padding: 0.75rem;\n          border: 2px solid #e1e8ed;\n          border-radius: 6px;\n          font-size: 0.9rem;\n        }\n        \n        .api-info {\n          background: #f8f9fa;\n          padding: 0.75rem;\n          border-radius: 6px;\n          margin-bottom: 1rem;\n          font-size: 0.9rem;\n        }\n        \n        .api-info a {\n          color: #667eea;\n          text-decoration: none;\n        }\n        \n        .settings-actions {\n          display: flex;\n          gap: 0.5rem;\n          justify-content: flex-end;\n        }\n        \n        .save-btn, .cancel-btn {\n          padding: 0.5rem 1rem;\n          border: none;\n          border-radius: 6px;\n          cursor: pointer;\n          font-weight: 600;\n        }\n        \n        .save-btn {\n          background: #667eea;\n          color: white;\n        }\n        \n        .cancel-btn {\n          background: #e9ecef;\n          color: #555;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nexport default APISettings","import { useState, useCallback, useEffect } from 'react'\nimport StockChart from './components/StockChart'\nimport StockControls from './components/StockControls'\nimport StockAnalysis from './components/StockAnalysis'\nimport LoadingSpinner from './components/LoadingSpinner'\nimport ErrorMessage from './components/ErrorMessage'\nimport APISettings from './components/APISettings'\nimport stockDataService from './services/stockDataService'\nimport './App.css'\n\nfunction App() {\n  const [stockData, setStockData] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [currentTicker, setCurrentTicker] = useState('')\n  const [currentPeriod, setCurrentPeriod] = useState('')\n  const [showAPISettings, setShowAPISettings] = useState(false)\n\n  // 앱 초기화\n  useEffect(() => {\n    checkAPIStatus()\n  }, [])\n\n  const checkAPIStatus = async () => {\n    try {\n      const status = await stockDataService.checkAPIStatus()\n      if (status.status === 'error') {\n        console.warn('API Status:', status.error)\n      }\n    } catch (err) {\n      console.warn('Failed to check API status:', err.message)\n    }\n  }\n\n  const loadStockData = useCallback(async (ticker, period) => {\n    if (!ticker?.trim()) {\n      setError('주식 티커 심볼을 입력해주세요')\n      return\n    }\n\n    setLoading(true)\n    setError(null)\n    \n    try {\n      console.log(`📈 Loading data for ${ticker.toUpperCase()}, period: ${period}`)\n      \n      // 원본 yfiance-ma.py와 동일한 데이터 처리\n      const data = await stockDataService.fetchStockData(ticker, period)\n      \n      if (data && data.data && data.data.length > 0) {\n        setStockData(data)\n        setCurrentTicker(ticker.toUpperCase())\n        setCurrentPeriod(period)\n        \n        console.log(`✅ Successfully loaded ${data.data.length} days of data`)\n        console.log(`📊 120-day MA points: ${data.analysis.ma120Days}`)\n        console.log(`📊 200-day MA points: ${data.analysis.ma200Days}`)\n        \n      } else {\n        setError('입력한 티커에 대한 데이터를 찾을 수 없습니다')\n        setStockData(null)\n      }\n    } catch (err) {\n      console.error('Error loading stock data:', err)\n      setError(err.message || '주식 데이터를 불러오는데 실패했습니다. 다시 시도해주세요.')\n      setStockData(null)\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <div className=\"header-content\">\n          <h1>📈 Stock Moving Averages Visualization</h1>\n          <p>원본 yfiance-ma.py와 동일한 분석 로직 | React + 무료 API</p>\n          \n          <button \n            className=\"api-settings-btn\"\n            onClick={() => setShowAPISettings(!showAPISettings)}\n          >\n            ⚙️ API 설정\n          </button>\n        </div>\n      </header>\n      \n      <main className=\"app-main\">\n        {showAPISettings && (\n          <APISettings onClose={() => setShowAPISettings(false)} />\n        )}\n        \n        <StockControls \n          onLoadData={loadStockData} \n          loading={loading}\n          defaultTicker=\"QQQ\"\n        />\n        \n        {error && <ErrorMessage message={error} />}\n        {loading && <LoadingSpinner />}\n        \n        {stockData && !loading && (\n          <>\n            <StockChart \n              data={stockData} \n              ticker={currentTicker}\n              period={currentPeriod}\n            />\n            <StockAnalysis \n              data={stockData} \n              ticker={currentTicker}\n            />\n          </>\n        )}\n        \n        {!stockData && !loading && !error && (\n          <div className=\"welcome-message\">\n            <div className=\"welcome-card\">\n              <h2>📊 주식 이동평균선 분석</h2>\n              <p>주식 티커를 입력하고 \"Load Data\" 버튼을 클릭하세요.</p>\n              \n              <div className=\"suggested-tickers\">\n                <h3>추천 티커:</h3>\n                <div className=\"ticker-tags\">\n                  {['MSFT', 'AAPL', 'NVDA', 'GOOGL', 'TSLA', 'AMZN', 'QQQ', 'SPY'].map(ticker => (\n                    <span key={ticker} className=\"ticker-tag\">{ticker}</span>\n                  ))}\n                </div>\n              </div>\n              \n              <div className=\"features\">\n                <h3>주요 기능:</h3>\n                <ul>\n                  <li>📈 실시간 주식 데이터 (무료 API)</li>\n                  <li>📊 120일 & 200일 이동평균선</li>\n                  <li>🎯 최저 기울기 지점 분석</li>\n                  <li>📱 반응형 디자인</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        )}\n      </main>\n      \n      <footer className=\"app-footer\">\n        <p>\n          Made with React + Vite | \n          <a href=\"https://github.com/yourusername/stock-app\" target=\"_blank\" rel=\"noopener noreferrer\">\n            GitHub\n          </a>\n        </p>\n      </footer>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.jsx'\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","client","createRoot","hydrateRoot","StockChart","data","ticker","period","chartData","useMemo","length","stockData","minSlope120","minSlope200","analysis","displayData","displayStartDate","filter","item","Date","date","console","log","dates","map","prices","close","ma120","ma200","Math","min","toFixed","max","v","traces","x","y","mode","name","line","color","width","hovertemplate","signalDate","chartStartDate","chartEndDate","isInRange","_a","ma120Slope","push","marker","size","symbol","text","textposition","textfont","family","_b","showlegend","_c","ma200Slope","_d","layout","title","font","xaxis","showgrid","gridcolor","yaxis","hovermode","legend","bgcolor","bordercolor","borderwidth","plot_bgcolor","paper_bgcolor","margin","t","r","height","config","responsive","displayModeBar","modeBarButtonsToRemove","displaylogo","toImageButtonOptions","format","filename","scale","className","children","ma120Days","ma200Days","jsxRuntimeExports","Plot","style","useResizeHandler","StockControls","onLoadData","loading","defaultTicker","setTicker","useState","setPeriod","suggestedTickers","onSubmit","preventDefault","trim","toUpperCase","htmlFor","id","value","onChange","target","placeholder","disabled","maxLength","slice","join","label","option","Fragment","suggestedTicker","onClick","handleQuickSelect","selectedTicker","StockAnalysis","analysisResults","latestData","totalDays","getCurrentTrend","slope","emoji","trend120","trend200","_e","_f","LoadingSpinner","ErrorMessage","message","FREE_APIS","ALPHA_VANTAGE","baseURL","function","FINNHUB","POLYGON","stockDataService","constructor","this","currentAPI","cache","Map","rateLimitDelay","setAPIKey","api","fetchStockData","__async","cacheKey","has","get","rawData","fetchFromYahooDirect","fetchFromAlphaVantage","fetchFromFinnhub","Error","processedData","processStockData","set","setTimeout","delete","error","handleAPIError","now","startDate","setFullYear","getFullYear","years","parseInt","startTimestamp","floor","getTime","endTimestamp","proxyURL","encodeURIComponent","toISOString","split","response","axios","timeout","responseType","headers","Accept","includes","parseYahooCSV","csvData","lines","i","values","open","parseFloat","high","low","volume","sort","endDate","displayEndDate","func","params","outputsize","apikey","timeSeries","fullData","convertAlphaVantageData","allData","entries","bufferStartDate","setDate","getDate","filteredData","itemDate","warn","index","processed","__spreadValues","sum120","reduce","sum","sum200","forEach","validMA120Slopes","isNaN","validMA200Slopes","code","status","checkAPIStatus","APISettings","onClose","apiKey","setApiKey","selectedAPI","setSelectedAPI","href","rel","alert","App","setStockData","setLoading","setError","currentTicker","setCurrentTicker","currentPeriod","setCurrentPeriod","showAPISettings","setShowAPISettings","useEffect","err","loadStockData","useCallback","ReactDOM","document","getElementById","render","React","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2]}